---
# Create SSL Certificates
- name: Make sure certbot packages are present
  package:
    name:
      - certbot
      - python3-certbot-dns-cloudflare
    state: present

# These credentials are stored in Tower vault and are accessed with variables through an injector
# API key deprecated. Using for simplification because of old repository packages.
- name: Create cloudflare credentials file for certbot
  copy:
    dest: "/etc/ssl/cloudflare_key"
    mode: "0600"
    content: |
      dns_cloudflare_email = {{ cloudflare_email }}
      dns_cloudflare_api_key = {{ cloudflare_api_key }}

- name: Create certificates
  shell: |
    certbot certonly --dns-cloudflare --dns-cloudflare-credentials /etc/ssl/cloudflare_key \
    -d "{{ item.server_name }}" --non-interactive \
    --agree-tos -m "{{ item.admin_email | default('acintasv@gmail.com') }}"
  with_items: "{{ nginx_vhosts }}"

# Create defined Vhosts
- name: Add managed vhost config files.
  template:
    src: "vhost.conf.j2"
    dest: "{{ nginx_vhost_path }}/{{ item.server_name }}.conf"
    force: "true"
    owner: "root"
    group: "root"
    mode: "0644"
  when: item.state|default('present') != 'absent'
  with_items: "{{ nginx_vhosts }}"
  notify: reload nginx

# DNS
- name: Create A record for new vhosts
  cloudflare_dns:
    zone: "{{ item.server_name }}"
    record: "{{ item.server_name }}"
    type: "A"
    value: "{{ ansible_ssh_host }}"
    account_email: "{{ cloudflare_email }}" # From Tower vault
    account_api_token: "{{ cloudflare_api_token }}" # From Tower vault
  with_items: "{{ nginx_vhosts }}"
